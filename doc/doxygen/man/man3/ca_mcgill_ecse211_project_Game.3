.TH "ca.mcgill.ecse211.project.Game" 3 "Fri Nov 2 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.project.Game
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "enum \fBStatus\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "String \fBgetStatusFullName\fP ()"
.br
.ti -1c
.RI "\fBStatus\fP \fBgetStatus\fP ()"
.br
.ti -1c
.RI "boolean \fBready\fP ()"
.br
.ti -1c
.RI "boolean \fBlocalized\fP ()"
.br
.ti -1c
.RI "boolean \fBnavigatedToTunnel\fP ()"
.br
.ti -1c
.RI "boolean \fBnavigatedToStart\fP ()"
.br
.ti -1c
.RI "boolean \fBnavigatedToTree\fP ()"
.br
.ti -1c
.RI "boolean \fBringFound\fP ()"
.br
.ti -1c
.RI "boolean \fBringNotFound\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBpreparation\fP ()  throws OdometerExceptions "
.br
.ti -1c
.RI "static synchronized void \fBreadData\fP ()"
.br
.ti -1c
.RI "static synchronized void \fBrunGame\fP ()  throws OdometerExceptions "
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static final EV3LargeRegulatedMotor \fBleftMotor\fP"
.br
.ti -1c
.RI "static final EV3LargeRegulatedMotor \fBrightMotor\fP"
.br
.ti -1c
.RI "static final EV3LargeRegulatedMotor \fBstorageMotor\fP"
.br
.ti -1c
.RI "static final EV3MediumRegulatedMotor \fBrodMotor\fP"
.br
.ti -1c
.RI "static final double \fBTILE\fP = 30\&.48"
.br
.ti -1c
.RI "static final double \fBWHEEL_RAD\fP = 2\&.15"
.br
.ti -1c
.RI "static final double \fBTRACK\fP = 11\&.5"
.br
.ti -1c
.RI "static final double \fBSEN_DIS\fP = 4\&.4"
.br
.in -1c
.SH "Detailed Description"
.PP 
This singleton contains all the methods and structures necessary to start competing in a game
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 33 of file Game\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBStatus\fP ca\&.mcgill\&.ecse211\&.project\&.Game\&.getStatus ()"
get the current status of the game
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 69 of file Game\&.java\&.
.PP
.nf
69                             {
70     return status;
71   }
.fi
.SS "String ca\&.mcgill\&.ecse211\&.project\&.Game\&.getStatusFullName ()"
get the full name of the status
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 59 of file Game\&.java\&.
.PP
.nf
59                                     {
60     String answer = status\&.toString();
61     return answer;
62   }
.fi
.SS "boolean ca\&.mcgill\&.ecse211\&.project\&.Game\&.localized ()"
Navigating to the tunnel and to the search area
.PP
\fBReturns:\fP
.RS 4
whether transition successful 
.RE
.PP

.PP
Definition at line 101 of file Game\&.java\&.
.PP
.nf
101                              {
102     boolean wasEventProcessed = false;
103 
104     Status aStatus = status;
105     switch (aStatus) {
106       case Localization:
107         // line 8 "model\&.ump"
108         // navigate();
109         setStatus(Status\&.NavigationSafe);
110         wasEventProcessed = true;
111         break;
112       default:
113         // Other states do respond to this event
114     }
115 
116     return wasEventProcessed;
117   }
.fi
.SS "boolean ca\&.mcgill\&.ecse211\&.project\&.Game\&.navigatedToStart ()"
Navigate to the starting corner
.PP
\fBReturns:\fP
.RS 4
whether transition successful 
.RE
.PP

.PP
Definition at line 153 of file Game\&.java\&.
.PP
.nf
153                                     {
154     boolean wasEventProcessed = false;
155 
156     Status aStatus = status;
157     switch (aStatus) {
158       case NavigationSafe:
159         // line 12 "model\&.ump"
160         // wait();
161         setStatus(Status\&.Idle);
162         wasEventProcessed = true;
163         break;
164       default:
165         // Other states do respond to this event
166     }
167 
168     return wasEventProcessed;
169   }
.fi
.SS "boolean ca\&.mcgill\&.ecse211\&.project\&.Game\&.navigatedToTree ()"
Navigate to the tree and try find the rings
.PP
\fBReturns:\fP
.RS 4
whether transition successful 
.RE
.PP

.PP
Definition at line 176 of file Game\&.java\&.
.PP
.nf
176                                    {
177     boolean wasEventProcessed = false;
178 
179     Status aStatus = status;
180     switch (aStatus) {
181       case NavigationSearch:
182         // line 16 "model\&.ump"
183         // searchRing();
184         setStatus(Status\&.RingSearch);
185         wasEventProcessed = true;
186         break;
187       default:
188         // Other states do respond to this event
189     }
190 
191     return wasEventProcessed;
192   }
.fi
.SS "boolean ca\&.mcgill\&.ecse211\&.project\&.Game\&.navigatedToTunnel ()"
whether transition successful
.PP
\fBReturns:\fP
.RS 4
whether transition successful 
.RE
.PP

.PP
Definition at line 124 of file Game\&.java\&.
.PP
.nf
124                                      {
125     boolean wasEventProcessed = false;
126 
127     Status aStatus = status;
128     switch (aStatus) {
129       case NavigationSafe:
130         // line 11 "model\&.ump"
131         // navigate();
132         setStatus(Status\&.NavigationSearch);
133         wasEventProcessed = true;
134         break;
135       case NavigationSearch:
136         // line 17 "model\&.ump"
137         // navigate();
138         setStatus(Status\&.NavigationSafe);
139         wasEventProcessed = true;
140         break;
141       default:
142         // Other states do respond to this event
143     }
144 
145     return wasEventProcessed;
146   }
.fi
.SS "static void ca\&.mcgill\&.ecse211\&.project\&.Game\&.preparation () throws \fBOdometerExceptions\fP\fC [static]\fP"
Prepare for the game: starting thread, read all arguments
.PP
\fBExceptions:\fP
.RS 4
\fIOdometerExceptions\fP 
.RE
.PP

.PP
Definition at line 306 of file Game\&.java\&.
.PP
.nf
306                                                              {
307     // Motor Objects, and Robot related parameters
308     Port usPort = LocalEV3\&.get()\&.getPort("S1");
309     // initialize multiple light ports in main
310     Port[] lgPorts = new Port[3];
311 
312     // Light sesnor sensor stuff
313     lgPorts[0] = LocalEV3\&.get()\&.getPort("S2");
314     lgPorts[1] = LocalEV3\&.get()\&.getPort("S3");
315     EV3ColorSensor[] lgSensors = new EV3ColorSensor[2];
316     for (int i = 0; i < lgSensors\&.length; i++) {
317       lgSensors[i] = new EV3ColorSensor(lgPorts[i]);
318     }
319 
320     Odometer odometer = Odometer\&.getOdometer(leftMotor, rightMotor, TRACK, WHEEL_RAD);
321 
322     // Sensor Related Stuff
323     SensorData sensorData = SensorData\&.getSensorData();
324 
325     // Ultrasonic sensor stuff
326     @SuppressWarnings("resource")
327     SensorModes usSensor = new EV3UltrasonicSensor(usPort);
328     SampleProvider usDistance = usSensor\&.getMode("Distance");
329     float[] usData = new float[usDistance\&.sampleSize()];
330 
331     SampleProvider backLight[] = new SampleProvider[2];
332     backLight[0] = lgSensors[0]\&.getRedMode();
333     backLight[1] = lgSensors[1]\&.getRedMode();
334 
335     TextLCD lcd = LocalEV3\&.get()\&.getTextLCD();
336     Display odometryDisplay = new Display(lcd);
337     // STEP 1: LOCALIZE to (1,1)
338     // ButtonChoice left or right
339     lcd\&.clear();
340     lcd\&.drawString("<  Left  |  Right >", 0, 0);
341     lcd\&.drawString(" falling | rising  ", 0, 1);
342     lcd\&.drawString("  edge   |  edge   ", 0, 2);
343     lcd\&.drawString("        \\/        ", 0, 3);
344     lcd\&.drawString("  Color Detection  ", 0, 4);
345 
346     // Start odometer and odometer display
347     Thread odoThread = new Thread(odometer);
348     odoThread\&.start();
349     Thread odoDisplayThread = new Thread(odometryDisplay);
350     odoDisplayThread\&.start();
351 
352     // Start ultrasonic and light sensors
353     usPoller = new UltrasonicPoller(usDistance, usData, sensorData);
354     Thread usThread = new Thread(usPoller);
355     usThread\&.start();
356     lightPoller = new LightPoller(backLight, new float[2][backLight[1]\&.sampleSize()], sensorData);
357     Thread lightThread = new Thread(lightPoller);
358     lightThread\&.start();
359 
360     // Thread fLgPoller1 = new RGBPoller(frontLight, new float[frontLight\&.sampleSize()],
361     // sensorData);
362     // fLgPoller1\&.start();
363     // Thread gPoller = new GyroPoller(gProvider, new float[gProvider\&.sampleSize()], sensorData);
364     // gPoller\&.start();
365   }
.fi
.SS "static synchronized void ca\&.mcgill\&.ecse211\&.project\&.Game\&.readData ()\fC [static]\fP"
Read data from the wifi class (using another thread) 
.PP
Definition at line 370 of file Game\&.java\&.
.PP
.nf
370                                              {
371     WiFi wifi = new WiFi();
372   }
.fi
.SS "boolean ca\&.mcgill\&.ecse211\&.project\&.Game\&.ready ()"
perform the localization and go to navigation
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 78 of file Game\&.java\&.
.PP
.nf
78                          {
79     boolean wasEventProcessed = false;
80 
81     Status aStatus = status;
82     switch (aStatus) {
83       case Idle:
84         // line 5 "model\&.ump"
85         // localize();
86         setStatus(Status\&.Localization);
87         wasEventProcessed = true;
88         break;
89       default:
90         // Other states do respond to this event
91     }
92 
93     return wasEventProcessed;
94   }
.fi
.SS "boolean ca\&.mcgill\&.ecse211\&.project\&.Game\&.ringFound ()"
if ring found, get the ring
.PP
\fBReturns:\fP
.RS 4
whether transition successful 
.RE
.PP

.PP
Definition at line 199 of file Game\&.java\&.
.PP
.nf
199                              {
200     boolean wasEventProcessed = false;
201 
202     Status aStatus = status;
203     switch (aStatus) {
204       case RingSearch:
205         // line 20 "model\&.ump"
206         // navigate();
207         setStatus(Status\&.NavigationSearch);
208         wasEventProcessed = true;
209         break;
210       default:
211         // Other states do respond to this event
212     }
213 
214     return wasEventProcessed;
215   }
.fi
.SS "boolean ca\&.mcgill\&.ecse211\&.project\&.Game\&.ringNotFound ()"
In case if the ring is not found
.PP
\fBReturns:\fP
.RS 4
whether transition successful 
.RE
.PP

.PP
Definition at line 222 of file Game\&.java\&.
.PP
.nf
222                                 {
223     boolean wasEventProcessed = false;
224 
225     Status aStatus = status;
226     switch (aStatus) {
227       case RingSearch:
228         // line 21 "model\&.ump"
229         // navigate();
230         setStatus(Status\&.NavigationSearch);
231         wasEventProcessed = true;
232         break;
233       default:
234         // Other states do respond to this event
235     }
236 
237     return wasEventProcessed;
238   }
.fi
.SS "static synchronized void ca\&.mcgill\&.ecse211\&.project\&.Game\&.runGame () throws \fBOdometerExceptions\fP\fC [static]\fP"
This method contains main logic for the game plays
.PP
\fBExceptions:\fP
.RS 4
\fIOdometerExceptions\fP 
.RE
.PP

.PP
Definition at line 379 of file Game\&.java\&.
.PP
.nf
379                                                                       {
380     final int buttonChoice = Button\&.waitForAnyPress(); // Record choice (left or right press)
381     // Start localizing
382     final Navigation navigation = new Navigation(leftMotor, rightMotor);
383     final UltrasonicLocalizer usLoc = new UltrasonicLocalizer(navigation, leftMotor, rightMotor);
384     final LightLocalizer lgLoc = new LightLocalizer(navigation, leftMotor, rightMotor);
385     final RingSearcher searcher = new RingSearcher(storageMotor, rodMotor);
386     // spawn a new Thread to avoid localization from blocking
387     (new Thread() {
388       public void run() {
389         // target color
390 
391         (new Thread() {
392           public void run() {
393             readData();
394             hasReadData = true;
395             notify();
396           }
397         })\&.start();
398         usLoc\&.localize(buttonChoice);
399         lgLoc\&.localize(GameParameters\&.SC);
400         searcher\&.search();
401         searcher\&.retrieveRing();
402         //ug collision detection always on
403         //navigate to start
404         try {
405           while (!hasReadData)
406             wait();
407         } catch (InterruptedException e) {
408           // TODO Auto-generated catch block
409           e\&.printStackTrace();
410         }
411       }
412     })\&.start();
413   }
.fi
.SH "Member Data Documentation"
.PP 
.SS " static  final EV3LargeRegulatedMotor ca\&.mcgill\&.ecse211\&.project\&.Game\&.leftMotor\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
=
      new EV3LargeRegulatedMotor(LocalEV3\&.get()\&.getPort("A"))
.fi
Motor object instance that allows control of the left motor connected to port A 
.PP
Definition at line 257 of file Game\&.java\&.
.SS " static  final EV3LargeRegulatedMotor ca\&.mcgill\&.ecse211\&.project\&.Game\&.rightMotor\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
=
      new EV3LargeRegulatedMotor(LocalEV3\&.get()\&.getPort("D"))
.fi
Motor object instance that allows control of the right motor connected to port D 
.PP
Definition at line 263 of file Game\&.java\&.
.SS " static  final EV3MediumRegulatedMotor ca\&.mcgill\&.ecse211\&.project\&.Game\&.rodMotor\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
=
      new EV3MediumRegulatedMotor(LocalEV3\&.get()\&.getPort("B"))
.fi
Motor object instance taht allows control of the motor on the rod for collecting rings 
.PP
Definition at line 275 of file Game\&.java\&.
.SS " static  final double ca\&.mcgill\&.ecse211\&.project\&.Game\&.SEN_DIS = 4\&.4\fC [static]\fP"
The distance between light sensor and the center of the robot in cm 
.PP
Definition at line 297 of file Game\&.java\&.
.SS " static  final EV3LargeRegulatedMotor ca\&.mcgill\&.ecse211\&.project\&.Game\&.storageMotor\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
=
      new EV3LargeRegulatedMotor(LocalEV3\&.get()\&.getPort("C"))
.fi
Motor object instance that allows control of the motor on storage rod 
.PP
Definition at line 269 of file Game\&.java\&.
.SS " static  final double ca\&.mcgill\&.ecse211\&.project\&.Game\&.TILE = 30\&.48\fC [static]\fP"
length of the tile 
.PP
Definition at line 281 of file Game\&.java\&.
.SS " static  final double ca\&.mcgill\&.ecse211\&.project\&.Game\&.TRACK = 11\&.5\fC [static]\fP"
This variable denotes the track distance between the center of the wheels in cm (measured and adjusted based on trial and error)\&. 
.PP
Definition at line 292 of file Game\&.java\&.
.SS " static  final double ca\&.mcgill\&.ecse211\&.project\&.Game\&.WHEEL_RAD = 2\&.15\fC [static]\fP"
This variable denotes the radius of our wheels in cm\&. 
.PP
Definition at line 286 of file Game\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.

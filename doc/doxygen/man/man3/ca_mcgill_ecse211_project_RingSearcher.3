.TH "ca.mcgill.ecse211.project.RingSearcher" 3 "Wed Nov 28 2018" "Version 1.0" "ECSE211 - Fall 2018 - Final Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ca.mcgill.ecse211.project.RingSearcher
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRingSearcher\fP (EV3LargeRegulatedMotor sensorMotor, EV3LargeRegulatedMotor rodMotor)  throws OdometerExceptions "
.br
.ti -1c
.RI "void \fBsearch\fP (int angle)"
.br
.ti -1c
.RI "void \fBdetectColor\fP ()"
.br
.ti -1c
.RI "void \fBprepareSearch\fP ()"
.br
.ti -1c
.RI "void \fBfinishSearch\fP ()"
.br
.ti -1c
.RI "void \fBresetSearch\fP ()"
.br
.ti -1c
.RI "void \fBprepareRetrieve\fP ()"
.br
.ti -1c
.RI "void \fBretrieveRing\fP ()"
.br
.ti -1c
.RI "void \fBsafeRod\fP ()"
.br
.ti -1c
.RI "void \fBresetRodMotor\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class helps our robot to search for rings on a grid itself as a thread will search and retrieve the rings
.PP
\fBAuthor:\fP
.RS 4
Caspar Cedro 
.PP
Percy Chen 
.PP
Patrick Erath 
.PP
Anssam Ghezala 
.PP
Susan Matuszewski 
.PP
Kamy Moussavi Kafi 
.RE
.PP

.PP
Definition at line 21 of file RingSearcher\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.RingSearcher (EV3LargeRegulatedMotor sensorMotor, EV3LargeRegulatedMotor rodMotor) throws \fBOdometerExceptions\fP"
This class provides method to check if there is a ring and if the ring is the color we want
.PP
\fBParameters:\fP
.RS 4
\fIstoragenMotor\fP the motor to move the storage of the robot 
.br
\fIrodMotor\fP the motor for the rod to collect the ring 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIOdometerExceptions\fP 
.RE
.PP

.PP
Definition at line 42 of file RingSearcher\&.java\&.
.PP
.nf
43                                 {
44     this\&.odometer = Odometer\&.getOdometer();
45     this\&.sensorMotor = sensorMotor;
46     this\&.rodMotor = rodMotor;
47     rodMotor\&.setSpeed(ROD_SPEED);
48     this\&.sensorMotor\&.setSpeed(SENSOR_SPEED);
49     data = SensorData\&.getSensorData();
50     for (BaseRegulatedMotor motor : new BaseRegulatedMotor[] {this\&.sensorMotor, this\&.rodMotor}) {
51       motor\&.stop();
52       motor\&.setAcceleration(ACCELERATION);
53     }
54   }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.detectColor ()"

.PP
Definition at line 66 of file RingSearcher\&.java\&.
.PP
.nf
66                             {
67     Game\&.INSTANCE\&.rgbPoller\&.setStart(true);
68     try {
69       Thread\&.sleep(1000);
70     } catch (InterruptedException e) {
71       // TODO Auto-generated catch block
72       e\&.printStackTrace();
73     }
74     // determine most frequent colour detected and beep accordingly
75     Game\&.INSTANCE\&.rgbPoller\&.setStart(false);
76     switch (ColorCalibrator\&.getMostFrequenct()) {
77       case Orange:
78         Sound\&.beep();
79         Sound\&.beep();
80         Sound\&.beep();
81         Sound\&.beep();
82         break;
83       case Yellow:
84         Sound\&.beep();
85         Sound\&.beep();
86         Sound\&.beep();
87         break;
88       case Green:
89         Sound\&.beep();
90         Sound\&.beep();
91         break;
92       case Blue:
93         Sound\&.beep();
94         break;
95       case Other:
96         break;
97       default:
98         break;
99     }
100   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.finishSearch ()"

.PP
Definition at line 109 of file RingSearcher\&.java\&.
.PP
.nf
109                              {
110     sensorMotor\&.rotateTo(-100);
111   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.prepareRetrieve ()"
This method rotate the rod to a suitable position for retrieve the ring 
.PP
Definition at line 123 of file RingSearcher\&.java\&.
.PP
.nf
123                                 {
124     rodMotor\&.rotateTo(ROD_PREPARE);
125   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.prepareSearch ()"
This method put the sensor to search rotation to be ready for the searching 
.PP
Definition at line 105 of file RingSearcher\&.java\&.
.PP
.nf
105                               {
106     sensorMotor\&.rotateTo(SENSOR_ROTATION);
107   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.resetRodMotor ()"
Rotate the rod back to the original position 
.PP
Definition at line 141 of file RingSearcher\&.java\&.
.PP
.nf
141                               {
142     rodMotor\&.rotateTo(0);
143   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.resetSearch ()"
This method put the sensor back 
.PP
Definition at line 116 of file RingSearcher\&.java\&.
.PP
.nf
116                             {
117     sensorMotor\&.rotateTo(0);
118   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.retrieveRing ()"
this method retrieve the searched ring 
.PP
Definition at line 130 of file RingSearcher\&.java\&.
.PP
.nf
130                              {
131     rodMotor\&.rotate(ROD_RETRIEVE);
132   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.safeRod ()"

.PP
Definition at line 134 of file RingSearcher\&.java\&.
.PP
.nf
134                         {
135     rodMotor\&.rotateTo(180);
136   }
.fi
.SS "void ca\&.mcgill\&.ecse211\&.project\&.RingSearcher\&.search (int angle)"
This method searches for the ring and identify its color based using the rod, It will beep based on the color of the ring 
.PP
Definition at line 61 of file RingSearcher\&.java\&.
.PP
.nf
61                                 {
62     sensorMotor\&.rotateTo(angle);
63     
64   }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for ECSE211 - Fall 2018 - Final Project from the source code\&.
